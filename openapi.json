{
  "openapi": "3.1.0",
  "info": {
    "title": "Team generator",
    "version": "0.1.0"
  },
  "paths": {
    "/heartbeat": {
      "get": {
        "summary": "Hearbeat",
        "operationId": "hearbeat_heartbeat_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/player": {
      "post": {
        "summary": "Add Player",
        "operationId": "add_player_player_post",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Player"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Get Player",
        "operationId": "get_player_player_get",
        "parameters": [
          {
            "name": "user_name",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "User Name"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/players": {
      "get": {
        "summary": "Get Players",
        "operationId": "get_players_players_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/game": {
      "post": {
        "summary": "Create Game",
        "operationId": "create_game_game_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GameCreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Game"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/games": {
      "get": {
        "summary": "Get Games",
        "operationId": "get_games_games_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/game/{game_name}": {
      "get": {
        "summary": "Get Game",
        "operationId": "get_game_game__game_name__get",
        "parameters": [
          {
            "name": "game_name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Game Name"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Game"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/round/{game_name}": {
      "post": {
        "summary": "Create Round",
        "operationId": "create_round_round__game_name__post",
        "parameters": [
          {
            "name": "game_name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Game Name"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RoundCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Round"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/round/{game_name}/{round_name}": {
      "get": {
        "summary": "Get Round",
        "operationId": "get_round_round__game_name___round_name__get",
        "parameters": [
          {
            "name": "game_name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Game Name"
            }
          },
          {
            "name": "round_name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Round Name"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Round"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/score/{game_name}/{round_name}": {
      "post": {
        "summary": "Add Score",
        "operationId": "add_score_score__game_name___round_name__post",
        "parameters": [
          {
            "name": "game_name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Game Name"
            }
          },
          {
            "name": "round_name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Round Name"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Score"
                  }
                ],
                "description": "JSON object with keys as team names and values as the scores",
                "title": "Body"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/scores/{game_name}": {
      "get": {
        "summary": "Get Player Scores",
        "operationId": "get_player_scores_scores__game_name__get",
        "parameters": [
          {
            "name": "game_name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Game Name"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Game": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "rounds": {
            "items": {
              "$ref": "#/components/schemas/Round"
            },
            "type": "array",
            "title": "Rounds",
            "default": []
          },
          "players": {
            "items": {
              "$ref": "#/components/schemas/GamePlayer"
            },
            "type": "array",
            "title": "Players",
            "default": []
          },
          "created": {
            "type": "string",
            "format": "date-time",
            "title": "Created"
          }
        },
        "type": "object",
        "required": [
          "name",
          "id",
          "created"
        ],
        "title": "Game"
      },
      "GameCreate": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "players": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Players"
          }
        },
        "type": "object",
        "required": [
          "name",
          "players"
        ],
        "title": "GameCreate",
        "example": {
          "name": "Game1",
          "players": [
            "Jon",
            "sam",
            "Bill"
          ]
        }
      },
      "GamePlayer": {
        "properties": {
          "player": {
            "$ref": "#/components/schemas/Player"
          }
        },
        "type": "object",
        "required": [
          "player"
        ],
        "title": "GamePlayer"
      },
      "HTTPValidationError": {
        "properties": {
          "detail": {
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            },
            "type": "array",
            "title": "Detail"
          }
        },
        "type": "object",
        "title": "HTTPValidationError"
      },
      "Player": {
        "properties": {
          "user_name": {
            "type": "string",
            "title": "User Name"
          }
        },
        "type": "object",
        "required": [
          "user_name"
        ],
        "title": "Player",
        "example": {
          "user_name": "Jon"
        }
      },
      "PlayerTeam": {
        "properties": {
          "player": {
            "$ref": "#/components/schemas/Player"
          }
        },
        "type": "object",
        "required": [
          "player"
        ],
        "title": "PlayerTeam"
      },
      "Round": {
        "properties": {
          "round_name": {
            "type": "string",
            "title": "Round Name"
          },
          "round_number": {
            "type": "integer",
            "title": "Round Number"
          },
          "shuffle": {
            "type": "boolean",
            "title": "Shuffle",
            "default": false
          },
          "teams": {
            "items": {
              "$ref": "#/components/schemas/Team"
            },
            "type": "array",
            "title": "Teams"
          },
          "created": {
            "type": "string",
            "format": "date-time",
            "title": "Created"
          }
        },
        "type": "object",
        "required": [
          "round_name",
          "round_number",
          "teams",
          "created"
        ],
        "title": "Round"
      },
      "RoundCreate": {
        "properties": {
          "team_names": {
            "items": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ]
            },
            "type": "array",
            "title": "Team Names"
          },
          "total_teams": {
            "type": "integer",
            "title": "Total Teams",
            "default": 2
          },
          "round_name": {
            "type": "string",
            "title": "Round Name"
          },
          "shuffle": {
            "type": "boolean",
            "title": "Shuffle",
            "default": false
          }
        },
        "type": "object",
        "required": [
          "round_name"
        ],
        "title": "RoundCreate",
        "example": {
          "round_name": "round1",
          "shuffle": false,
          "team_names": [
            "team1",
            "team2"
          ],
          "total_teams": 2
        }
      },
      "Score": {
        "properties": {
          "scores": {
            "items": {
              "$ref": "#/components/schemas/ScoreItem"
            },
            "type": "array",
            "title": "Scores"
          }
        },
        "type": "object",
        "required": [
          "scores"
        ],
        "title": "Score",
        "example": {
          "scores": [
            {
              "score": 30,
              "team_name": "Team1"
            },
            {
              "score": 20,
              "team_name": "Team2"
            }
          ]
        }
      },
      "ScoreItem": {
        "properties": {
          "team_name": {
            "type": "string",
            "title": "Team Name"
          },
          "score": {
            "type": "integer",
            "title": "Score"
          }
        },
        "type": "object",
        "required": [
          "team_name",
          "score"
        ],
        "title": "ScoreItem"
      },
      "Team": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "players": {
            "items": {
              "$ref": "#/components/schemas/PlayerTeam"
            },
            "type": "array",
            "title": "Players"
          }
        },
        "type": "object",
        "required": [
          "name",
          "players"
        ],
        "title": "Team"
      },
      "ValidationError": {
        "properties": {
          "loc": {
            "items": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            },
            "type": "array",
            "title": "Location"
          },
          "msg": {
            "type": "string",
            "title": "Message"
          },
          "type": {
            "type": "string",
            "title": "Error Type"
          }
        },
        "type": "object",
        "required": [
          "loc",
          "msg",
          "type"
        ],
        "title": "ValidationError"
      }
    }
  }
}